<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Trackar - Logout</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://unpkg.com/html5-qrcode"></script>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
  <div class="bg-white shadow-md rounded-lg p-8 max-w-md w-full">
    <h1 class="text-2xl font-bold mb-6 text-center text-blue-700">Trackar Logout</h1>

    <!-- Message area -->
    <div id="message" class="mb-4 text-center text-sm"></div>

    <!-- Manual Input Form -->
    <form id="manualLogoutForm" class="space-y-4">
      <label class="block text-gray-700 font-medium">Email or Phone Number</label>
      <input 
        type="text" 
        id="manualIdentifier"
        placeholder="Enter email or phone number" 
        required
        class="w-full px-4 py-2 border rounded-md shadow-sm focus:ring focus:ring-blue-200 focus:outline-none"
      />
      <button 
        type="submit" 
        class="w-full bg-blue-600 text-white font-semibold py-2 rounded-md hover:bg-blue-700 transition"
      >
        Logout
      </button>
    </form>

    <div class="text-center my-4 text-gray-500">or</div>

    <!-- QR Code Scanner -->
    <div class="space-y-2">
      <div id="qr-reader" class="rounded-md overflow-hidden border"></div>
    </div>
  </div>

  <script>
    const messageDiv = document.getElementById("message");

    function showMessage(text, success = true) {
      messageDiv.textContent = text;
      messageDiv.className = `mb-4 text-center text-sm ${success ? 'text-green-600' : 'text-red-600'}`;
    }

    // Manual logout using Fetch
    const manualForm = document.getElementById("manualLogoutForm");
    manualForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const identifier = document.getElementById("manualIdentifier").value;

      const res = await fetch("/api/staff/logout", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ identifier })
      });

      const data = await res.json();

    if (res.ok) {
    window.location.href = "/staff-signin";
    } else {
    showMessage(data.message || "Logout failed", false);
    }
    });

    // QR Code logout using html5-qrcode
    const html5QrCode = new Html5Qrcode("qr-reader");

    function onScanSuccess(decodedText, decodedResult) {
      html5QrCode.stop().then(async () => {
        const confirmLogout = confirm(`Log out user with ID: ${decodedText}?`);
        if (!confirmLogout) {
          await html5QrCode.start(
            { facingMode: "environment" },
            { fps: 10, qrbox: 250 },
            onScanSuccess
          );
          return;
        }

        const res = await fetch("/api/staff/logout", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ identifier: decodedText })
        });

        const data = await res.json();

        if (res.ok) {
        window.location.href = "/staff-signin";
      } else {
        showMessage(data.message || "Logout failed", false);
      }
      }).catch(err => {
        console.error("Failed to stop scanner:", err);
        showMessage("Scanner error. Try again.", false);
      });
    }

    Html5Qrcode.getCameras().then(devices => {
      if (devices && devices.length) {
        html5QrCode.start(
          { facingMode: "environment" },
          { fps: 10, qrbox: 250 },
          onScanSuccess
        );
      }
    }).catch(err => {
      console.error("Camera error:", err);
      showMessage("Camera access error.", false);
    });
  </script>
</body>
</html>
